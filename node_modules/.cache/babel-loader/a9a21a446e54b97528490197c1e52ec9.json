{"ast":null,"code":"var _jsxFileName = \"/Users/ford/Desktop/marketapp/ui/src/components/Products/Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { render } from 'react-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getItems } from '../../business/api';\nimport Item from './Item';\nimport Page from './Page';\nimport ProductsAction from '../../actions/products';\nimport { sortTypes } from '../../constants/sort';\nimport Types from './Types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const localization = useSelector(state => state.localization);\n  const storeProducts = useSelector(state => state.products);\n  const storeCompany = useSelector(state => state.company);\n  const storeTag = useSelector(state => state.tag);\n  const storeSorting = useSelector(state => state.sorting);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    getItems().then(resp => dispatch(ProductsAction.setProductsAll(resp)));\n  }, []);\n  useEffect(() => {\n    if (storeProducts.data !== null) {\n      let resp = storeProducts.data;\n      resp = applyTypeFilter(resp);\n      resp = applyCompanyFilter(resp);\n      resp = applyTagFilter(resp);\n      resp = applySort(resp);\n      const count = resp.length;\n      const pagesCount = Math.floor(count / storeProducts.grid.itemsPerPage) + 1;\n\n      if (pagesCount !== storeProducts.grid.pagesCount) {\n        dispatch(ProductsAction.setProductsGridPageCount(pagesCount));\n      }\n\n      const {\n        activePageNumber,\n        itemsPerPage\n      } = storeProducts.grid;\n      setProducts(resp.slice((activePageNumber - 1) * itemsPerPage, activePageNumber * itemsPerPage));\n    }\n  }, [storeProducts.selectedType, storeProducts.grid.activePageNumber, storeProducts.grid.toggleRefresh, storeProducts.data]);\n\n  const applyTypeFilter = list => {\n    return list.filter(l => l.itemType === storeProducts.selectedType);\n  };\n\n  const applyCompanyFilter = list => {\n    let result = [];\n\n    if (storeCompany.allChecked) {\n      result = list;\n    } else {\n      Object.keys(storeCompany.data).map(key => {\n        if (storeCompany.data[key].checked) {\n          result.push(...list.filter(l => l.manufacturer === key));\n        }\n      });\n    }\n\n    return result;\n  };\n\n  const applyTagFilter = list => {\n    let result = [];\n\n    if (storeTag.allChecked) {\n      result = list;\n    } else {\n      Object.keys(storeTag.data).map(key => {\n        if (storeTag.data[key].checked) {\n          result.push(...list.filter(l => l.tags.filter(t => t === key).length > 0));\n        }\n      });\n    }\n\n    return result;\n  };\n\n  const applySort = list => {\n    if (storeSorting.type === sortTypes.priceAsc) {\n      return list.sort((a, b) => a.price - b.price);\n    } else if (storeSorting.type === sortTypes.priceDesc) {\n      return list.sort((a, b) => b.price - a.price);\n    } else if (storeSorting.type === sortTypes.dateAsc) {\n      return list.sort((a, b) => a.added - b.added);\n    } else if (storeSorting.type === sortTypes.dateDesc) {\n      return list.sort((a, b) => b.added - a.added);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'mt10',\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: localization.products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Types, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'mt10 containerBG',\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: products.map((p, index) => index % 4 === 0 ? /*#__PURE__*/_jsxDEV(Row, {\n            children: products.slice(index, index + 4).map(p => /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Item, {\n                  id: p.slug,\n                  name: p.name,\n                  price: p.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Index, \"P0iMIaa+h9PGQrMDViocFGO0qXc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/ford/Desktop/marketapp/ui/src/components/Products/Index.js"],"names":["React","useEffect","useState","useMemo","useSelector","useDispatch","useLocation","Redirect","render","Container","Row","Col","getItems","Item","Page","ProductsAction","sortTypes","Types","Index","dispatch","localization","state","storeProducts","products","storeCompany","company","storeTag","tag","storeSorting","sorting","setProducts","then","resp","setProductsAll","data","applyTypeFilter","applyCompanyFilter","applyTagFilter","applySort","count","length","pagesCount","Math","floor","grid","itemsPerPage","setProductsGridPageCount","activePageNumber","slice","selectedType","toggleRefresh","list","filter","l","itemType","result","allChecked","Object","keys","map","key","checked","push","manufacturer","tags","t","type","priceAsc","sort","a","b","price","priceDesc","dateAsc","added","dateDesc","p","index","slug","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,kBAAtC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,YAAY,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACD,YAAhB,CAAhC;AACA,QAAME,aAAa,GAAGlB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACE,QAAhB,CAAjC;AACA,QAAMC,YAAY,GAAGpB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACI,OAAhB,CAAhC;AACA,QAAMC,QAAQ,GAAGtB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACM,GAAhB,CAA5B;AACA,QAAMC,YAAY,GAAGxB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACQ,OAAhB,CAAhC;AAEA,QAAM,CAACN,QAAD,EAAWO,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,GAAGmB,IAAX,CAAiBC,IAAD,IACZb,QAAQ,CAACJ,cAAc,CAACkB,cAAf,CAA8BD,IAA9B,CAAD,CADZ;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA/B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGqB,aAAa,CAACY,IAAd,KAAuB,IAA1B,EAA+B;AAC3B,UAAIF,IAAI,GAAGV,aAAa,CAACY,IAAzB;AACAF,MAAAA,IAAI,GAAGG,eAAe,CAACH,IAAD,CAAtB;AACAA,MAAAA,IAAI,GAAGI,kBAAkB,CAACJ,IAAD,CAAzB;AACAA,MAAAA,IAAI,GAAGK,cAAc,CAACL,IAAD,CAArB;AACAA,MAAAA,IAAI,GAAGM,SAAS,CAACN,IAAD,CAAhB;AAEA,YAAMO,KAAK,GAAGP,IAAI,CAACQ,MAAnB;AACA,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAGjB,aAAa,CAACsB,IAAd,CAAmBC,YAAtC,IAAsD,CAAzE;;AAEA,UAAGJ,UAAU,KAAKnB,aAAa,CAACsB,IAAd,CAAmBH,UAArC,EAAgD;AAC5CtB,QAAAA,QAAQ,CAACJ,cAAc,CAAC+B,wBAAf,CAAwCL,UAAxC,CAAD,CAAR;AACH;;AAED,YAAM;AAAEM,QAAAA,gBAAF;AAAoBF,QAAAA;AAApB,UAAqCvB,aAAa,CAACsB,IAAzD;AACAd,MAAAA,WAAW,CAACE,IAAI,CAACgB,KAAL,CAAW,CAACD,gBAAgB,GAAG,CAApB,IAAyBF,YAApC,EAAkDE,gBAAgB,GAAGF,YAArE,CAAD,CAAX;AACH;AACJ,GAlBQ,EAkBN,CAACvB,aAAa,CAAC2B,YAAf,EAA6B3B,aAAa,CAACsB,IAAd,CAAmBG,gBAAhD,EAAkEzB,aAAa,CAACsB,IAAd,CAAmBM,aAArF,EAAoG5B,aAAa,CAACY,IAAlH,CAlBM,CAAT;;AAoBA,QAAMC,eAAe,GAAIgB,IAAD,IAAU;AAC9B,WAAOA,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAMA,CAAC,CAACC,QAAF,KAAehC,aAAa,CAAC2B,YAA/C,CAAP;AACH,GAFD;;AAIA,QAAMb,kBAAkB,GAAIe,IAAD,IAAU;AACjC,QAAII,MAAM,GAAG,EAAb;;AAEA,QAAG/B,YAAY,CAACgC,UAAhB,EAA2B;AACvBD,MAAAA,MAAM,GAAGJ,IAAT;AACH,KAFD,MAGI;AACAM,MAAAA,MAAM,CAACC,IAAP,CAAYlC,YAAY,CAACU,IAAzB,EAA+ByB,GAA/B,CAAoCC,GAAD,IAAO;AACtC,YAAGpC,YAAY,CAACU,IAAb,CAAkB0B,GAAlB,EAAuBC,OAA1B,EAAkC;AAC9BN,UAAAA,MAAM,CAACO,IAAP,CAAY,GAAGX,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAMA,CAAC,CAACU,YAAF,KAAmBH,GAArC,CAAf;AACH;AACJ,OAJD;AAKH;;AAED,WAAOL,MAAP;AACH,GAfD;;AAiBA,QAAMlB,cAAc,GAAIc,IAAD,IAAU;AAC7B,QAAII,MAAM,GAAG,EAAb;;AAEA,QAAG7B,QAAQ,CAAC8B,UAAZ,EAAuB;AACnBD,MAAAA,MAAM,GAAGJ,IAAT;AACH,KAFD,MAGI;AACAM,MAAAA,MAAM,CAACC,IAAP,CAAYhC,QAAQ,CAACQ,IAArB,EAA2ByB,GAA3B,CAAgCC,GAAD,IAAO;AAClC,YAAGlC,QAAQ,CAACQ,IAAT,CAAc0B,GAAd,EAAmBC,OAAtB,EAA8B;AAC1BN,UAAAA,MAAM,CAACO,IAAP,CAAY,GAAGX,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAMA,CAAC,CAACW,IAAF,CAAOZ,MAAP,CAAea,CAAD,IAAMA,CAAC,KAAKL,GAA1B,EAAgCpB,MAAhC,GAAyC,CAA3D,CAAf;AACH;AACJ,OAJD;AAKH;;AAED,WAAOe,MAAP;AACH,GAfD;;AAiBA,QAAMjB,SAAS,GAAIa,IAAD,IAAU;AACxB,QAAGvB,YAAY,CAACsC,IAAb,KAAsBlD,SAAS,CAACmD,QAAnC,EAA4C;AACxC,aAAOhB,IAAI,CAACiB,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhC,CAAP;AACH,KAFD,MAGK,IAAG3C,YAAY,CAACsC,IAAb,KAAsBlD,SAAS,CAACwD,SAAnC,EAA6C;AAC9C,aAAOrB,IAAI,CAACiB,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAhC,CAAP;AACH,KAFI,MAGA,IAAG3C,YAAY,CAACsC,IAAb,KAAsBlD,SAAS,CAACyD,OAAnC,EAA2C;AAC5C,aAAOtB,IAAI,CAACiB,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,KAAF,GAAUJ,CAAC,CAACI,KAAhC,CAAP;AACH,KAFI,MAGA,IAAG9C,YAAY,CAACsC,IAAb,KAAsBlD,SAAS,CAAC2D,QAAnC,EAA4C;AAC7C,aAAOxB,IAAI,CAACiB,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACI,KAAF,GAAUL,CAAC,CAACK,KAAhC,CAAP;AACH;AACJ,GAbD;;AAeA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA,6BACI;AAAA,kBAAOtD,YAAY,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAA,6BACI,QAAC,SAAD;AAAA,gCACI;AAAA,oBACMA,QAAQ,CAACoC,GAAT,CAAa,CAACiB,CAAD,EAAIC,KAAJ,KACXA,KAAK,GAAG,CAAR,KAAc,CAAd,gBACI,QAAC,GAAD;AAAA,sBACMtD,QAAQ,CAACyB,KAAT,CAAe6B,KAAf,EAAsBA,KAAK,GAAG,CAA9B,EAAiClB,GAAjC,CAAsCiB,CAAD,iBACnC,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAY,cAAA,EAAE,EAAE,CAAhB;AAAA,qCACI;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAEA,CAAC,CAACE,IAAZ;AAAkB,kBAAA,IAAI,EAAEF,CAAC,CAACG,IAA1B;AAAgC,kBAAA,KAAK,EAAEH,CAAC,CAACL;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADF;AADN;AAAA;AAAA;AAAA;AAAA,kBADJ,GAUK,IAXP;AADN;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBI;AAAA,iCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAzHD;;GAAMrD,K;UACeb,W,EACID,W,EACCA,W,EACDA,W,EACJA,W,EACIA,W;;;KANnBc,K;AA2HN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation, Redirect } from 'react-router-dom'\nimport { render } from 'react-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { getItems } from '../../business/api'\nimport Item from './Item'\nimport Page from './Page'\nimport ProductsAction from '../../actions/products'\nimport { sortTypes } from '../../constants/sort'\nimport Types from './Types'\n\nconst Index = () => {\n    const dispatch = useDispatch()\n    const localization = useSelector(state => state.localization)\n    const storeProducts = useSelector(state => state.products)\n    const storeCompany = useSelector(state => state.company)\n    const storeTag = useSelector(state => state.tag)\n    const storeSorting = useSelector(state => state.sorting)\n\n    const [products, setProducts] = useState([])\n\n    useEffect(() => {\n        getItems().then((resp)=>(\n            dispatch(ProductsAction.setProductsAll(resp))\n        ))\n    }, [])\n\n    useEffect(() => {\n        if(storeProducts.data !== null){\n            let resp = storeProducts.data\n            resp = applyTypeFilter(resp)\n            resp = applyCompanyFilter(resp)\n            resp = applyTagFilter(resp)\n            resp = applySort(resp)\n\n            const count = resp.length\n            const pagesCount = Math.floor(count / storeProducts.grid.itemsPerPage) + 1\n\n            if(pagesCount !== storeProducts.grid.pagesCount){\n                dispatch(ProductsAction.setProductsGridPageCount(pagesCount))\n            }\n\n            const { activePageNumber, itemsPerPage } = storeProducts.grid\n            setProducts(resp.slice((activePageNumber - 1) * itemsPerPage, activePageNumber * itemsPerPage))\n        }\n    }, [storeProducts.selectedType, storeProducts.grid.activePageNumber, storeProducts.grid.toggleRefresh, storeProducts.data])\n\n    const applyTypeFilter = (list) => {\n        return list.filter((l)=>(l.itemType === storeProducts.selectedType))\n    }\n\n    const applyCompanyFilter = (list) => {\n        let result = []\n\n        if(storeCompany.allChecked){\n            result = list\n        }\n        else{\n            Object.keys(storeCompany.data).map((key)=>{\n                if(storeCompany.data[key].checked){\n                    result.push(...list.filter((l)=>(l.manufacturer === key)))\n                }\n            })\n        }\n\n        return result\n    }\n\n    const applyTagFilter = (list) => {\n        let result = []\n\n        if(storeTag.allChecked){\n            result = list\n        }\n        else{\n            Object.keys(storeTag.data).map((key)=>{\n                if(storeTag.data[key].checked){\n                    result.push(...list.filter((l)=>(l.tags.filter((t)=>(t === key)).length > 0)))\n                }\n            })\n        }\n\n        return result\n    }\n\n    const applySort = (list) => {\n        if(storeSorting.type === sortTypes.priceAsc){\n            return list.sort((a, b) => a.price - b.price)\n        }\n        else if(storeSorting.type === sortTypes.priceDesc){\n            return list.sort((a, b) => b.price - a.price)\n        }\n        else if(storeSorting.type === sortTypes.dateAsc){\n            return list.sort((a, b) => a.added - b.added)\n        }\n        else if(storeSorting.type === sortTypes.dateDesc){\n            return list.sort((a, b) => b.added - a.added)\n        }\n    }\n\n    return(\n        <div>\n            <div className={'mt10'}>\n                <span>{localization.products}</span>\n            </div>\n            <div>\n                <Types></Types>\n            </div>\n            <div className={'mt10 containerBG'}>\n                <Container>\n                    <div>\n                        { products.map((p, index)=>(\n                            index % 4 === 0 ? (\n                                <Row>\n                                    { products.slice(index, index + 4).map((p)=>(\n                                        <Col sm={3} md={3}>\n                                            <div>\n                                                <Item id={p.slug} name={p.name} price={p.price}></Item>\n                                            </div>\n                                        </Col>\n                                    )) }\n                                </Row>\n                            ) : (null)\n                        )) }\n                    </div>\n                    <div>\n                        <Page></Page>\n                    </div>\n                </Container>\n            </div>\n        </div>\n    )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}