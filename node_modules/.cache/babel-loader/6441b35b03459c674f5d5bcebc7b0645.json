{"ast":null,"code":"var _jsxFileName = \"/Users/ford/Desktop/marketapp/ui/src/components/Tags/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { InputGroup, FormControl, Form } from 'react-bootstrap';\nimport TagAction from '../../actions/tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const localization = useSelector(state => state.localization);\n  const storeTags = useSelector(state => state.tag);\n  useEffect(() => {\n    if (storeTags.filter !== null) {\n      let tags = storeTags.data;\n      Object.keys(tags).map(key => {\n        tags[key].display = tags[key].text.toUpperCase().replaceAll(' ', '').includes(storeTags.filter.toUpperCase().replaceAll(' ', ''));\n      });\n      dispatch(TagAction.setTags(tags));\n    }\n  }, [storeTags.filter]);\n  return /*#__PURE__*/_jsxDEV(InputGroup, {\n    className: \"mb-3\",\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      className: 'fs12',\n      placeholder: localization.searchTag,\n      onChange: e => dispatch(TagAction.setTagsFilter(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"dL1JZacxdCX41tOB9jV0XG1F9Ho=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/ford/Desktop/marketapp/ui/src/components/Tags/Search.js"],"names":["React","useEffect","useState","useSelector","useDispatch","InputGroup","FormControl","Form","TagAction","Search","dispatch","localization","state","storeTags","tag","filter","tags","data","Object","keys","map","key","display","text","toUpperCase","replaceAll","includes","setTags","searchTag","e","setTagsFilter","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,IAAlC,QAA8C,iBAA9C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,YAAY,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,YAAhB,CAAhC;AACA,QAAME,SAAS,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACE,GAAhB,CAA7B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGY,SAAS,CAACE,MAAV,KAAqB,IAAxB,EAA6B;AACzB,UAAIC,IAAI,GAAGH,SAAS,CAACI,IAArB;AAEAC,MAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,GAAlB,CAAuBC,GAAD,IAAO;AACzBL,QAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUC,OAAV,GAAoBN,IAAI,CAACK,GAAD,CAAJ,CAAUE,IAAV,CAAeC,WAAf,GAA6BC,UAA7B,CAAwC,GAAxC,EAA4C,EAA5C,EAAgDC,QAAhD,CAAyDb,SAAS,CAACE,MAAV,CAAiBS,WAAjB,GAA+BC,UAA/B,CAA0C,GAA1C,EAA8C,EAA9C,CAAzD,CAApB;AACH,OAFD;AAIAf,MAAAA,QAAQ,CAACF,SAAS,CAACmB,OAAV,CAAkBX,IAAlB,CAAD,CAAR;AACH;AACJ,GAVQ,EAUN,CAACH,SAAS,CAACE,MAAX,CAVM,CAAT;AAYA,sBACI,QAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,SAAS,EAAE,MADf;AAEI,MAAA,WAAW,EAAEJ,YAAY,CAACiB,SAF9B;AAGI,MAAA,QAAQ,EAAGC,CAAD,IAAKnB,QAAQ,CAACF,SAAS,CAACsB,aAAV,CAAwBD,CAAC,CAACE,MAAF,CAASC,KAAjC,CAAD;AAH3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA1BD;;GAAMvB,M;UACeL,W,EACID,W,EACHA,W;;;KAHhBM,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { InputGroup, FormControl, Form } from 'react-bootstrap'\nimport TagAction from '../../actions/tag'\n\nconst Search = () => {\n    const dispatch = useDispatch()\n    const localization = useSelector(state => state.localization)\n    const storeTags = useSelector(state => state.tag)\n\n    useEffect(() => {\n        if(storeTags.filter !== null){\n            let tags = storeTags.data\n\n            Object.keys(tags).map((key)=>{\n                tags[key].display = tags[key].text.toUpperCase().replaceAll(' ','').includes(storeTags.filter.toUpperCase().replaceAll(' ',''))\n            })\n\n            dispatch(TagAction.setTags(tags))\n        }\n    }, [storeTags.filter])\n\n    return(\n        <InputGroup className=\"mb-3\">\n            <FormControl\n                className={'fs12'}\n                placeholder={localization.searchTag}\n                onChange={(e)=>dispatch(TagAction.setTagsFilter(e.target.value))}\n            />\n        </InputGroup>\n    )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}