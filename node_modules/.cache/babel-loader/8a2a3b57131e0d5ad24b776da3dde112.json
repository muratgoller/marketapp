{"ast":null,"code":"import { SET_COMPANIES, SET_COMPANIES_FILTER, SET_COMPANY_CHECKED_STATUS, SET_COMPANY_ALL_CHECKED_STATUS } from '../actions/company';\nexport const company = {\n  data: [],\n  filter: null,\n  allChecked: true\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_COMPANIES:\n      return { ...state,\n        company: { ...state.company,\n          data: action.companies\n        }\n      };\n\n    case SET_COMPANIES_FILTER:\n      return { ...state,\n        company: { ...state.company,\n          filter: action.filter\n        }\n      };\n\n    case SET_COMPANY_CHECKED_STATUS:\n      const allChecked = Object.keys(state.company.data).filter(key => state.company.data[key].checked).length === 1 && !action.status;\n      return { ...state,\n        company: { ...state.company,\n          data: { ...state.company.data,\n            [action.key]: { ...state.company.data[action.key],\n              checked: action.status\n            }\n          },\n          allChecked: allChecked\n        },\n        products: { ...state.products,\n          grid: { ...state.products.grid,\n            activePageNumber: 1,\n            toggleRefresh: !state.products.grid.toggleRefresh\n          }\n        }\n      };\n\n    case SET_COMPANY_ALL_CHECKED_STATUS:\n      let companiesDataToModify = state.company.data;\n\n      if (action.status) {\n        Object.keys(companiesDataToModify).map(key => companiesDataToModify[key].checked = false);\n      }\n\n      return { ...state,\n        company: { ...state.company,\n          allChecked: action.status,\n          data: companiesDataToModify\n        },\n        products: { ...state.products,\n          grid: { ...state.products.grid,\n            activePageNumber: 1,\n            toggleRefresh: !state.products.grid.toggleRefresh\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ford/Desktop/marketapp/ui/src/reducers/company.js"],"names":["SET_COMPANIES","SET_COMPANIES_FILTER","SET_COMPANY_CHECKED_STATUS","SET_COMPANY_ALL_CHECKED_STATUS","company","data","filter","allChecked","reducer","state","action","type","companies","Object","keys","key","checked","length","status","products","grid","activePageNumber","toggleRefresh","companiesDataToModify","map"],"mappings":"AAAA,SACCA,aADD,EAECC,oBAFD,EAGCC,0BAHD,EAICC,8BAJD,QAKO,oBALP;AAOA,OAAO,MAAMC,OAAO,GAAG;AACtBC,EAAAA,IAAI,EAAE,EADgB;AAEtBC,EAAAA,MAAM,EAAE,IAFc;AAGtBC,EAAAA,UAAU,EAAE;AAHU,CAAhB;;AAMP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACF,SAAKX,aAAL;AACA,aAAO,EACN,GAAGS,KADG;AAENL,QAAAA,OAAO,EAAE,EACR,GAAGK,KAAK,CAACL,OADD;AAERC,UAAAA,IAAI,EAAEK,MAAM,CAACE;AAFL;AAFH,OAAP;;AAQA,SAAKX,oBAAL;AACA,aAAO,EACN,GAAGQ,KADG;AAENL,QAAAA,OAAO,EAAE,EACR,GAAGK,KAAK,CAACL,OADD;AAERE,UAAAA,MAAM,EAAEI,MAAM,CAACJ;AAFP;AAFH,OAAP;;AAQA,SAAKJ,0BAAL;AAEA,YAAMK,UAAU,GAAIM,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACL,OAAN,CAAcC,IAA1B,EAAgCC,MAAhC,CAAwCS,GAAD,IAAQN,KAAK,CAACL,OAAN,CAAcC,IAAd,CAAmBU,GAAnB,EAAwBC,OAAvE,EAAiFC,MAAjF,KAA4F,CAA5F,IAAiG,CAACP,MAAM,CAACQ,MAA7H;AAEA,aAAO,EACN,GAAGT,KADG;AAENL,QAAAA,OAAO,EAAE,EACR,GAAGK,KAAK,CAACL,OADD;AAERC,UAAAA,IAAI,EAAE,EACL,GAAGI,KAAK,CAACL,OAAN,CAAcC,IADZ;AAEL,aAACK,MAAM,CAACK,GAAR,GAAc,EACb,GAAGN,KAAK,CAACL,OAAN,CAAcC,IAAd,CAAmBK,MAAM,CAACK,GAA1B,CADU;AAEbC,cAAAA,OAAO,EAAEN,MAAM,CAACQ;AAFH;AAFT,WAFE;AASRX,UAAAA,UAAU,EAAEA;AATJ,SAFH;AAaNY,QAAAA,QAAQ,EAAE,EACT,GAAGV,KAAK,CAACU,QADA;AAETC,UAAAA,IAAI,EAAE,EACL,GAAGX,KAAK,CAACU,QAAN,CAAeC,IADb;AAELC,YAAAA,gBAAgB,EAAE,CAFb;AAGLC,YAAAA,aAAa,EAAE,CAACb,KAAK,CAACU,QAAN,CAAeC,IAAf,CAAoBE;AAH/B;AAFG;AAbJ,OAAP;;AAuBA,SAAKnB,8BAAL;AAEA,UAAIoB,qBAAqB,GAAGd,KAAK,CAACL,OAAN,CAAcC,IAA1C;;AAEA,UAAGK,MAAM,CAACQ,MAAV,EAAiB;AAChBL,QAAAA,MAAM,CAACC,IAAP,CAAYS,qBAAZ,EAAmCC,GAAnC,CAAwCT,GAAD,IACtCQ,qBAAqB,CAACR,GAAD,CAArB,CAA2BC,OAA3B,GAAqC,KADtC;AAGA;;AAED,aAAO,EACN,GAAGP,KADG;AAENL,QAAAA,OAAO,EAAE,EACR,GAAGK,KAAK,CAACL,OADD;AAERG,UAAAA,UAAU,EAAEG,MAAM,CAACQ,MAFX;AAGRb,UAAAA,IAAI,EAAEkB;AAHE,SAFH;AAONJ,QAAAA,QAAQ,EAAE,EACT,GAAGV,KAAK,CAACU,QADA;AAETC,UAAAA,IAAI,EAAE,EACL,GAAGX,KAAK,CAACU,QAAN,CAAeC,IADb;AAELC,YAAAA,gBAAgB,EAAE,CAFb;AAGLC,YAAAA,aAAa,EAAE,CAACb,KAAK,CAACU,QAAN,CAAeC,IAAf,CAAoBE;AAH/B;AAFG;AAPJ,OAAP;;AAiBM;AAAS,aAAOb,KAAP;AAzEb;AA2EH,CA5ED;;AA8EA,eAAeD,OAAf","sourcesContent":["import { \n\tSET_COMPANIES,\n\tSET_COMPANIES_FILTER,\n\tSET_COMPANY_CHECKED_STATUS,\n\tSET_COMPANY_ALL_CHECKED_STATUS\n} from '../actions/company'\n\nexport const company = {\n\tdata: [],\n\tfilter: null,\n\tallChecked: true\n}\n\nconst reducer = (state, action) => {\n    switch(action.type){\n\t\tcase SET_COMPANIES :\n\t\treturn {\n\t\t\t...state,\n\t\t\tcompany: {\n\t\t\t\t...state.company,\n\t\t\t\tdata: action.companies\n\t\t\t}\n\t\t}\n\n\t\tcase SET_COMPANIES_FILTER :\n\t\treturn {\n\t\t\t...state,\n\t\t\tcompany: {\n\t\t\t\t...state.company,\n\t\t\t\tfilter: action.filter\n\t\t\t}\n\t\t}\n\n\t\tcase SET_COMPANY_CHECKED_STATUS :\n\n\t\tconst allChecked = (Object.keys(state.company.data).filter((key)=>(state.company.data[key].checked)).length === 1 && !action.status)\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tcompany: {\n\t\t\t\t...state.company,\n\t\t\t\tdata: {\n\t\t\t\t\t...state.company.data,\n\t\t\t\t\t[action.key]: {\n\t\t\t\t\t\t...state.company.data[action.key],\n\t\t\t\t\t\tchecked: action.status\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tallChecked: allChecked\n\t\t\t},\n\t\t\tproducts: {\n\t\t\t\t...state.products,\n\t\t\t\tgrid: {\n\t\t\t\t\t...state.products.grid,\n\t\t\t\t\tactivePageNumber: 1,\n\t\t\t\t\ttoggleRefresh: !state.products.grid.toggleRefresh\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase SET_COMPANY_ALL_CHECKED_STATUS :\n\n\t\tlet companiesDataToModify = state.company.data\n\n\t\tif(action.status){\n\t\t\tObject.keys(companiesDataToModify).map((key)=>(\n\t\t\t\tcompaniesDataToModify[key].checked = false\n\t\t\t))\n\t\t}\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tcompany: {\n\t\t\t\t...state.company,\n\t\t\t\tallChecked: action.status,\n\t\t\t\tdata: companiesDataToModify\n\t\t\t},\n\t\t\tproducts: {\n\t\t\t\t...state.products,\n\t\t\t\tgrid: {\n\t\t\t\t\t...state.products.grid,\n\t\t\t\t\tactivePageNumber: 1,\n\t\t\t\t\ttoggleRefresh: !state.products.grid.toggleRefresh\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n        default: return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}