{"ast":null,"code":"var _jsxFileName = \"/Users/ford/Desktop/marketapp/ui/src/components/Tags/Items.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { InputGroup, FormControl, Form } from 'react-bootstrap';\nimport { getItems } from '../../business/api';\nimport TagAction from '../../actions/tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Items = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const localization = useSelector(state => state.localization);\n  const storeTags = useSelector(state => state.tag);\n  const storeProductsData = useSelector(state => state.products.data);\n  useEffect(() => {\n    if (storeProductsData !== null) {\n      let resp = storeProductsData;\n      let tags = [];\n      resp.map(item => item.tags.map(tag => tags.push(tag)));\n      const groupByArray = tags.reduce((a, c) => (a[c] = (a[c] || 0) + 1, a), Object.create(null));\n      tags = [...new Set(tags)].sort((a, b) => a - b);\n      let result = {};\n      tags.map(t => result[t] = {\n        text: t,\n        checked: false,\n        display: true,\n        count: groupByArray[t]\n      });\n      dispatch(TagAction.setTags(result));\n    }\n  }, [storeProductsData]);\n  useEffect(() => {\n    const bool = Object.keys(storeTags.data).filter(key => storeTags.data[key].checked).length === 0;\n\n    if (bool !== storeTags.allChecked) {\n      dispatch(TagAction.setTagAllCheckedStatus(bool));\n    }\n  }, [storeTags.data]);\n\n  const toggleItemCheckedStatus = (key, checked) => {\n    dispatch(TagAction.setTagCheckedStatus(key, checked));\n  };\n\n  const toggleAllCheckedStatus = checked => {\n    if (checked) {\n      dispatch(TagAction.setTagAllCheckedStatus(checked));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'brandItems',\n    children: Object.keys(storeTags.data).map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: (storeTags.filter === null || storeTags.filter === '') && index === 0 ? /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: localization.all,\n          checked: storeTags.allChecked,\n          onChange: () => toggleAllCheckedStatus(!storeTags.allChecked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'mt10',\n        children: storeTags.data[key].display ? /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: storeTags.data[key].text + ' (' + storeTags.data[key].count + ')',\n          checked: storeTags.data[key].checked,\n          onChange: () => toggleItemCheckedStatus(key, !storeTags.data[key].checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Items, \"dJKWua52WNN8891k7UWOpovSgmo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["/Users/ford/Desktop/marketapp/ui/src/components/Tags/Items.js"],"names":["React","useEffect","useState","useSelector","useDispatch","InputGroup","FormControl","Form","getItems","TagAction","Items","dispatch","localization","state","storeTags","tag","storeProductsData","products","data","resp","tags","map","item","push","groupByArray","reduce","a","c","Object","create","Set","sort","b","result","t","text","checked","display","count","setTags","bool","keys","filter","key","length","allChecked","setTagAllCheckedStatus","toggleItemCheckedStatus","setTagCheckedStatus","toggleAllCheckedStatus","index","all"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { InputGroup, FormControl, Form } from 'react-bootstrap'\nimport { getItems } from '../../business/api'\nimport TagAction from '../../actions/tag'\n\nconst Items = () => {\n    const dispatch = useDispatch()\n    const localization = useSelector(state => state.localization)\n    const storeTags = useSelector(state => state.tag)\n    const storeProductsData = useSelector(state => state.products.data)\n\n    useEffect(() => {\n        if(storeProductsData !== null){\n            let resp = storeProductsData\n\n            let tags = []\n            resp.map((item)=>(\n                item.tags.map((tag)=>(\n                    tags.push(tag)\n                ))\n            ))\n\n            const groupByArray = tags.reduce((a, c) => (a[c] = (a[c] || 0) + 1, a), Object.create(null))\n\n            tags = [...new Set(tags)].sort((a, b) => a - b)\n\n            let result = {}\n\n            tags.map((t)=>(\n                result[t] = { text: t, checked: false, display: true, count: groupByArray[t] }\n            ))\n            dispatch(TagAction.setTags(result))\n        }\n    }, [storeProductsData])\n\n    useEffect(() => {\n        const bool = Object.keys(storeTags.data).filter((key)=>(storeTags.data[key].checked)).length === 0\n\n        if(bool !== storeTags.allChecked){\n            dispatch(TagAction.setTagAllCheckedStatus(bool))\n        }\n    }, [storeTags.data])\n\n    const toggleItemCheckedStatus = (key, checked) => {\n        dispatch(TagAction.setTagCheckedStatus(key, checked))\n    }\n\n    const toggleAllCheckedStatus = (checked) => {\n        if(checked){\n            dispatch(TagAction.setTagAllCheckedStatus(checked))\n        }\n    }\n\n    return(\n        <div className={'brandItems'}>\n            { Object.keys(storeTags.data).map((key, index)=>(\n                <div className='sortItem' key={key}>\n                    <div>\n                        { ((storeTags.filter === null || storeTags.filter === '') && index === 0) ? (\n                            <Form.Check\n                                type='checkbox' \n                                label={localization.all} \n                                checked={storeTags.allChecked}\n                                onChange={()=>toggleAllCheckedStatus(!storeTags.allChecked)}\n                            ></Form.Check>\n                        ) : null }\n                    </div>  \n                    <div className={'mt10'}>\n                        { storeTags.data[key].display ? (\n                            <Form.Check\n                                type='checkbox' \n                                label={storeTags.data[key].text + ' (' + storeTags.data[key].count + ')'} \n                                checked={storeTags.data[key].checked}\n                                onChange={()=>toggleItemCheckedStatus(key, !storeTags.data[key].checked)}\n                            ></Form.Check>\n                        ) : null }\n                    </div>\n                </div>\n            )) }\n        </div>\n    )\n}\n\nexport default Items"]},"metadata":{},"sourceType":"module"}