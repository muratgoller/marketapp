{"ast":null,"code":"import { SET_BASKET_MODAL_VISIBLE_STATUS, SET_BASKET_PRODUCTS } from '../actions/basket';\nexport const basket = {\n  modalVisible: false,\n  products: [],\n  totalCost: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_BASKET_MODAL_VISIBLE_STATUS:\n      return { ...state,\n        basket: { ...state.basket,\n          modalVisible: action.status\n        }\n      };\n\n    case SET_BASKET_PRODUCTS:\n      let totalCost = 0;\n      action.products.map(p => totalCost = totalCost + p.qty * p.unitPrice);\n      return { ...state,\n        basket: { ...state.basket,\n          products: action.products,\n          totalCost: totalCost\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ford/Desktop/marketapp/ui/src/reducers/basket.js"],"names":["SET_BASKET_MODAL_VISIBLE_STATUS","SET_BASKET_PRODUCTS","basket","modalVisible","products","totalCost","reducer","state","action","type","status","map","p","qty","unitPrice"],"mappings":"AAAA,SACCA,+BADD,EAEIC,mBAFJ,QAGO,mBAHP;AAKA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,YAAY,EAAE,KADI;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,SAAS,EAAE;AAHO,CAAf;;AAMP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACF,SAAKT,+BAAL;AACA,aAAO,EACN,GAAGO,KADG;AAENL,QAAAA,MAAM,EAAE,EACK,GAAGK,KAAK,CAACL,MADd;AAEKC,UAAAA,YAAY,EAAEK,MAAM,CAACE;AAF1B;AAFF,OAAP;;AAQM,SAAKT,mBAAL;AAEA,UAAII,SAAS,GAAG,CAAhB;AAEAG,MAAAA,MAAM,CAACJ,QAAP,CAAgBO,GAAhB,CAAqBC,CAAD,IAChBP,SAAS,GAAGA,SAAS,GAAIO,CAAC,CAACC,GAAF,GAAQD,CAAC,CAACE,SADvC;AAIN,aAAO,EACN,GAAGP,KADG;AAENL,QAAAA,MAAM,EAAE,EACK,GAAGK,KAAK,CAACL,MADd;AAEKE,UAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAFtB;AAGKC,UAAAA,SAAS,EAAEA;AAHhB;AAFF,OAAP;;AASM;AAAS,aAAOE,KAAP;AA3Bb;AA6BH,CA9BD;;AAgCA,eAAeD,OAAf","sourcesContent":["import { \n\tSET_BASKET_MODAL_VISIBLE_STATUS,\n    SET_BASKET_PRODUCTS\n} from '../actions/basket'\n\nexport const basket = {\n    modalVisible: false,\n    products: [],\n    totalCost: 0\n}\n\nconst reducer = (state, action) => {\n    switch(action.type){\n\t\tcase SET_BASKET_MODAL_VISIBLE_STATUS :\n\t\treturn {\n\t\t\t...state,\n\t\t\tbasket: {\n                ...state.basket,\n                modalVisible: action.status\n            }\n\t\t}\n\n        case SET_BASKET_PRODUCTS :\n\n        let totalCost = 0\n\n        action.products.map((p)=>(\n            totalCost = totalCost + (p.qty * p.unitPrice)\n        ))\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tbasket: {\n                ...state.basket,\n                products: action.products,\n                totalCost: totalCost\n            }\n\t\t}\n\n        default: return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}