{"ast":null,"code":"var _jsxFileName = \"/Users/ford/Desktop/marketapp/ui/src/components/Products/Page.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Pagination } from '@material-ui/lab';\nimport { usePagination } from '@material-ui/lab/Pagination';\nimport ProductsAction from '../../actions/products';\nimport { isMobile, isTablet } from 'react-device-detect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const localization = useSelector(state => state.localization);\n  const grid = useSelector(state => state.products.grid);\n\n  const handlePageChange = pageNo => {\n    if (pageNo !== grid.activePageNumber) {\n      dispatch(ProductsAction.setProductsGridActivePageNumber(pageNo));\n    }\n  };\n\n  return grid.pagesCount > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'alignHCenter mt20 mb20',\n    children: /*#__PURE__*/_jsxDEV(Pagination, {\n      pageNumber: grid.activePageNumber,\n      count: grid.pagesCount,\n      showFirstButton: !(isMobile || isTablet),\n      showLastButton: !(isMobile || isTablet),\n      size: isMobile || isTablet ? 'small' : 'large',\n      color: 'standard',\n      onChange: (e, pageNo) => handlePageChange(pageNo),\n      siblingCount: isMobile || isTablet ? 1 : 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this) : null;\n};\n\n_s(Page, \"jwzebXjkwQDBBAA1K7chkNNb2gY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/ford/Desktop/marketapp/ui/src/components/Products/Page.js"],"names":["React","useSelector","useDispatch","Pagination","usePagination","ProductsAction","isMobile","isTablet","Page","dispatch","localization","state","grid","products","handlePageChange","pageNo","activePageNumber","setProductsGridActivePageNumber","pagesCount","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,qBAAnC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,YAAY,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,YAAhB,CAAhC;AACA,QAAME,IAAI,GAAGX,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACE,QAAN,CAAeD,IAAzB,CAAxB;;AAEA,QAAME,gBAAgB,GAAIC,MAAD,IAAY;AACjC,QAAGA,MAAM,KAAKH,IAAI,CAACI,gBAAnB,EAAoC;AAChCP,MAAAA,QAAQ,CAACJ,cAAc,CAACY,+BAAf,CAA+CF,MAA/C,CAAD,CAAR;AACH;AACJ,GAJD;;AAMA,SACIH,IAAI,CAACM,UAAL,GAAkB,CAAlB,gBACI;AAAK,IAAA,SAAS,EAAE,wBAAhB;AAAA,2BACI,QAAC,UAAD;AACI,MAAA,UAAU,EAAEN,IAAI,CAACI,gBADrB;AAEI,MAAA,KAAK,EAAEJ,IAAI,CAACM,UAFhB;AAGI,MAAA,eAAe,EAAE,EAAEZ,QAAQ,IAAIC,QAAd,CAHrB;AAII,MAAA,cAAc,EAAE,EAAED,QAAQ,IAAIC,QAAd,CAJpB;AAKI,MAAA,IAAI,EAAED,QAAQ,IAAIC,QAAZ,GAAuB,OAAvB,GAAiC,OAL3C;AAMI,MAAA,KAAK,EAAE,UANX;AAOI,MAAA,QAAQ,EAAE,CAACY,CAAD,EAAIJ,MAAJ,KAAeD,gBAAgB,CAACC,MAAD,CAP7C;AAQI,MAAA,YAAY,EAAET,QAAQ,IAAIC,QAAZ,GAAuB,CAAvB,GAA2B;AAR7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,GAaI,IAdR;AAgBH,CA3BD;;GAAMC,I;UACeN,W,EACID,W,EACRA,W;;;KAHXO,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Pagination } from '@material-ui/lab'\nimport { usePagination } from '@material-ui/lab/Pagination'\nimport ProductsAction from '../../actions/products'\nimport { isMobile, isTablet } from 'react-device-detect'\n\nconst Page = () => {\n    const dispatch = useDispatch()\n    const localization = useSelector(state => state.localization)\n    const grid = useSelector(state => state.products.grid)\n\n    const handlePageChange = (pageNo) => {\n        if(pageNo !== grid.activePageNumber){\n            dispatch(ProductsAction.setProductsGridActivePageNumber(pageNo))\n        }\n    }\n\n    return(\n        grid.pagesCount > 1 ? (\n            <div className={'alignHCenter mt20 mb20'}>\n                <Pagination \n                    pageNumber={grid.activePageNumber}\n                    count={grid.pagesCount} \n                    showFirstButton={!(isMobile || isTablet)}\n                    showLastButton={!(isMobile || isTablet)}\n                    size={isMobile || isTablet ? 'small' : 'large'}\n                    color={'standard'}\n                    onChange={(e, pageNo) => handlePageChange(pageNo)}\n                    siblingCount={isMobile || isTablet ? 1 : 2}\n                />\n            </div>\n        ) : null\n    )\n}\n\nexport default Page"]},"metadata":{},"sourceType":"module"}